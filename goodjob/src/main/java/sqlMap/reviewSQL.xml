<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodjob.review">
	<select id="reviewList"
		resultType="com.goodjob.review.model.ReviewDTO" parameterType="Map">

		select * from
		(select rownum as rnum,a.* from

		(select com_name from review
		where status ='활성'
		<if test="keyword ==''"></if>
		<if test="keyword !=''">
			and com_name like '%${keyword}%' </if>
		group by com_name
		) a) b
		where <![CDATA[rnum>=]]>#{start}
		and rnum<![CDATA[<=]]>#{end}
	</select>
	<insert id="reviewWrite"
		parameterType="com.goodjob.review.model.ReviewDTO">
		insert into review values(review_idx.nextval,
		#{member_idx}, #{review_num}, #{com_name}, sysdate, #{keyword},'활성')
	</insert>
	<select id="reviewSetReviewNum" resultType="Integer">
		select
		Max(review_num) as review_num from review
	</select>
	<select id="reviewList2"
		resultType="com.goodjob.resume.model.ResumeDTO" parameterType="map">
		SELECT
		com_name as name,
		MAX(CASE WHEN rnum = 1 THEN keyword END) as
		gender,
		MAX(CASE WHEN rnum = 2 THEN keyword END) as addr,
		MAX(CASE WHEN
		rnum = 3 THEN keyword END) as detail_addr,
		keyword_count as member_idx
		FROM
		(SELECT
		rownum as rnum,
		a.*,
		(SELECT count(*) FROM review r
		WHERE
		r.com_name = a.com_name and r.status='활성'
		<if test="keyword ==''"></if>
		<if test="keyword !=''"> and com_name like '%${keyword}%' </if>
		) as
		keyword_count
		FROM
		(SELECT r.com_name,
		k.content as keyword, COUNT(*) as cnt
		FROM review r
		INNER JOIN keyword k
		ON k.idx = r.keyword
		WHERE com_name = #{com_name} and r.status ='활성'
		GROUP BY r.com_name, r.status, k.content
		ORDER BY cnt DESC
		) a
		) b
		WHERE rnum <![CDATA[<]]>=
		3
		GROUP BY com_name, keyword_count
		Having keyword_count <![CDATA[>]]>
		0
		

	</select>
	<select id="reviewTotalCnt" parameterType="String"
		resultType="Integer">
		select count(com_name) from
		(select com_name from
		review where status='활성'
		group by com_name)
		<if test="keyword ==''"></if>
		<if test="keyword !=''">where com_name like '%${keyword}%' </if>
	</select>
	<select id="myReviewList"
		resultType="com.goodjob.resume.model.ResumeDTO" parameterType="Map">
		
		SELECT
		com_name as name,
		MAX(CASE WHEN rnum = 1 THEN keyword END) as
		gender,
		MAX(CASE WHEN rnum = 2 THEN keyword END) as addr,
		MAX(CASE WHEN
		rnum = 3 THEN keyword END) as detail_addr,
		keyword_count as member_idx
		FROM
		(SELECT
		rownum as rnum,
		a.*,
		(SELECT count(*) FROM review r 
		WHERE
		r.com_name = a.com_name and r.status='활성') as
		keyword_count 
		FROM
		(SELECT r.com_name,
		k.content as keyword, COUNT(*) as cnt
		FROM review r
		INNER JOIN keyword k
		ON k.idx = r.keyword
		WHERE review_num = #{review_num} and r.status='활성'
		GROUP BY r.com_name, r.status,
		k.content
		ORDER BY cnt DESC
		) a
		) b
		WHERE
		rnum <![CDATA[<]]>=
		3
		GROUP BY com_name, keyword_count
		
	</select>
	<select id="myReview"
		resultType="com.goodjob.review.model.ReviewDTO"
		parameterType="Map">
		select * from
		(select rownum as rnum,a.* from
		(select review_num from review 
		where member_idx  =  #{member_idx}
		and status='활성' 
		group by review_num 
		) a) b
		where <![CDATA[rnum>=]]>#{start}
		and rnum<![CDATA[<=]]>#{end}
	</select>
	<update id="reviewDel" parameterType="Integer">
		update review set status =
		'미활성' where member_idx = #{member_idx} and review_num = #{review_num}
	</update>
	<select id="myReviewTotalCnt" parameterType="Integer" resultType="Integer">
		select count(com_name) from
			(select com_name from
			review where status='활성' and member_idx = #{member_idx}
			group by com_name)
	</select>
</mapper>